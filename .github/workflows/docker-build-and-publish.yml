name: build-keycloak-phone-image

on:
  push:
    branches: 
      - master
      - main
    paths:
      - 'keycloak-phone-provider/**'
      - 'keycloak-sms-provider-*/**'
      - 'docker/**'
      - '.github/workflows/docker-build-and-publish.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KC_VERSION: "21.0.2"
  MAVEN_OPTS: "-Dmaven.test.skip=true"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: m2-${{ runner.os }}-

      - name: Build plugin (Maven)
        run: mvn -B -U clean package ${{ env.MAVEN_OPTS }}

      - name: Prepare Docker build context
        run: |
          mkdir -p target/providers
          cp keycloak-phone-provider/target/*.jar target/providers/ 2>/dev/null || true
          cp keycloak-phone-provider.resources/target/*.jar target/providers/ 2>/dev/null || true
          cp keycloak-sms-provider-*/target/*.jar target/providers/ 2>/dev/null || true
          # Copy and process Dockerfile
          cp docker/Dockerfile target/
          sed -i "s/@version.keycloak@/${{ env.KC_VERSION }}/g" target/Dockerfile
          # Show what we built
          echo "=== Built JARs ==="
          ls -la target/providers/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: target
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:kc-${{ env.KC_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
